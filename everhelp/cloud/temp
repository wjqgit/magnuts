curl -X POST \
  -H "X-Parse-Application-Id: tOQcWFtNOQpSExXFPOAyRfdWw6HUw5tC4gxSiCib" \
  -H "X-Parse-REST-API-Key: z26Vy9v7O86YBeOWAdR2xERZ1jXNg48ZOZOIU3hp" \
  -H "Content-Type: application/json" \
  -d '{}' \
  https://api.parse.com/1/functions/hello

  curl -X POST \
  -H "X-Parse-Application-Id: tOQcWFtNOQpSExXFPOAyRfdWw6HUw5tC4gxSiCib" \
  -H "X-Parse-REST-API-Key: z26Vy9v7O86YBeOWAdR2xERZ1jXNg48ZOZOIU3hp" \
  -H "Content-Type: application/json" \
  -d '{}' \
  https://api.parse.com/1/functions/viewAllUsers

  curl -X POST \
  -H "X-Parse-Application-Id: tOQcWFtNOQpSExXFPOAyRfdWw6HUw5tC4gxSiCib" \
  -H "X-Parse-REST-API-Key: z26Vy9v7O86YBeOWAdR2xERZ1jXNg48ZOZOIU3hp" \
  -H "Content-Type: application/json" \
  -d '{"user":"wjq"}' \
  https://api.parse.com/1/functions/viewUser

  curl -X POST \
  -H "X-Parse-Application-Id: tOQcWFtNOQpSExXFPOAyRfdWw6HUw5tC4gxSiCib" \
  -H "X-Parse-REST-API-Key: z26Vy9v7O86YBeOWAdR2xERZ1jXNg48ZOZOIU3hp" \
  -H "Content-Type: application/json" \
  -d '{"user":"wjq", "value": 100}' \
  https://api.parse.com/1/functions/modifyUserCash

    if (request.params.username) note.set('username', request.params.username)
    if (request.params.title) note.set('title', request.params.title)
    if (request.params.content) note.set('content', request.params.content)
    if (request.params.reward) note.set('reward', request.params.reward)
    console.log(typeof request.params.username)
  console.log(typeof request.params.reward);

  function test(note, callback) {
    console.log('Testing');
    var query = new Parse.Query(Parse.User)
    query.equalTo('username', note.get('username'))
    query.first({
        success: function(user) {
            //console.log(user.get('username'));
            callback.success(user.get('username'))
        },
        error: function(err) {
            callback.error('User Lookup Failed')
        }
    })
}

//To modify a note
Parse.Cloud.define('escrowToUserB', function(request, response) {
    console.log('Granting Process Starts!');
    Parse.Cloud.useMasterKey()
    var escrow = new Parse.Query(Parse.User),
      userB = new Parse.Query(Parse.User),
      charity = new Parse.Query(Parse.User),
        reward = request.params.reward,
        shareToUser = Math.random() * (reward.toFixed(2))
        console.log(typeof shareToUser);
        shareToUser = parseFloat(shareToUser.toFixed(2))
        console.log(typeof shareToUser);
    var shareToCharity = reward - shareToUser
      console.log(typeof shareToUser);
        console.log(shareToUser);
    escrow.equalTo('username', 'escrow')
    escrow.first({
        success: function(escrowAcct) {
            escrowAcct.set('cash', escrowAcct.get('cash') - reward)
            escrowAcct.save(null, {
                success: function(escrowAcct) {
                    userB.equalTo('username', request.params.helpername)
                    userB.first({
                        success: function(userBAcct) {
                          console.log(userBAcct.get('username'));
                            userBAcct.set('cash', userBAcct.get('cash') + shareToUser)
                            console.log(userBAcct.get('cash'));
                            userBAcct.save(null, {
                                success: function(userBAcct) {
                                    console.log('User B Got: $' + shareToUser + ' !');
                                    charity.equalTo('username', 'charity')
                                    charity.first({
                                        success: function(charityAcct) {
                                            charityAcct.set('cash', charityAcct.get('cash') + shareToCharity)
                                            charityAcct.save(null, {
                                                success: function(charityAcct) {
                                                    console.log('Donated to Charity: $' + shareToCharity + ' !')
                                                    response.success('Granting Session Successed!')
                                                },
                                                error: function(err) {
                                                    console.log('Value Adding to Charity Failed!')
                                                    response.error(err.message)
                                                }
                                            })
                                        },
                                        error: function(err) {
                                            console.log('Error Loading Escrow Account!')
                                            response.error(err.message)
                                        }
                                    })
                                },
                                error: function(err) {
                                    console.log('Value Adding to User B Failed!')
                                    response.error(err.message)
                                }
                            })
                        },
                        error: function(err) {
                            console.log('User A Not Found!')
                            response.error(err.message)
                        }
                    })
                },
                error: function(err) {
                    console.log('Value Deduction from Escrow Failed!')
                    response.error(err.message)
                }
            })
        },
        error: function(err) {
            console.log('Error Loading Escrow Account!')
            response.error(err.message)
        }
    })

})

Parse.Cloud.define('pushNewPost', function(request, response) {
    var query = new Parse.Query(Parse.Installation)
    data = {}
    data.alert = 'User: ' + request.params.username + ' Content: ' + request.params.content + ' Reward : $' + request.params.reward.toString()
    Parse.Push.send({
        channels: ['global'],
        data: data
    }, {
        success: function() {
            console.log('Push New Post Succeeded!');
        },
        error: function() {
            console.log('Push New Post Failed');
        }
    })
})